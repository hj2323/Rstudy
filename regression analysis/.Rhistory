# 자료를 읽어 산점도 그리기
forbes = read.table("c:/data/reg/forbes.txt", header=T)
head(forbes, 3)
Lpress = 100 * log(10*press, base=10)
Lpress = 100 * log(10*forbes$press, base=10)
Lpress
# 자료를 읽어 산점도 그리기
forbes = read.table("c:/data/reg/forbes.txt", header=T)
head(forbes, 3)
attach(forbes)
Lpress = 100 * log(10*forbes$press, base=10)
Lpress
plot(temp, Lpress, pch=19)
# 회귀모형 적합하기
forbes.lm = lm(Lpress ~ temp, data=forbes)
summary(forbes.lm)
# 분산분석표 구하기
anova(forbes.lm)
# 잔차 및 추정값 보기
names(forbes.lm)
cbind(forbes, forbes.lm$residuals, forbes.lm$fitted.values)
# 잔차 그림 그리기
plot(temp, forbes.lm$residuals, pch=19)
abline(h=0, lty=2)
plot(forbes.lm$fitted.values, forbes.lm$residuals, pch=19)
abline(h=0, lty=2)
# 잔차 그림 그리기
plot(temp, forbes.lm$residuals, pch=19)
abline(h=0, lty=2)
plot(forbes.lm$fitted.values, forbes.lm$residuals, pch=19)
abline(h=0, lty=2)
# 추정값의 신뢰대 그리기
p.x = data.frame(temp=c(1, 45))
# 추정값의 신뢰대 그리기
p.x = data.frame(temp=c(1, 45))
pc=predict(forbes.lm, int="c", newdata=p.x)
pred.x = p.x$temp
plot(temp, Lpress, ylim = range(Lpress, pc))
matlines(pred.x, pc, lty=c(1,2,2), col="BLUE")
# 추정값의 신뢰대 그리기
pc=predict(forbes.lm, int="c", newdata=p.x)
pred.x = p.x$temp
plot(temp, press, ylim = range(press, pc))
matlines(pred.x, pc, lty=c(1,2,2), col="BLUE")
plot(temp, press, ylim = range(Lpress, pc))
plot(temp, Lpress, ylim = range(press, pc))
plot(temp, Lpress, ylim = range(Lpress, pc))
# 추정값의 신뢰대 그리기
pc=predict(forbes.lm, int="c", newdata=p.x)
pred.x = p.x$temp
plot(temp, Lpress, ylim = range(Lpress, pc))
matlines(pred.x, pc, lty=c(1,2,2), col="BLUE")
# 추정값의 신뢰대 그리기
p.x = data.frame(temp=c(1, 17))
pc=predict(forbes.lm, int="c", newdata=p.x)
pred.x = p.x$temp
plot(temp, Lpress, ylim = range(Lpress, pc))
matlines(pred.x, pc, lty=c(1,2,2), col="BLUE")
matlines(pred.x, pc, lty=c(1,2,2), col="BLUE")
plot(temp, Lpress, ylim = range(Lpress, pc))
pred.x = p.x$temp
pc=predict(forbes.lm, int="c", newdata=p.x)
# 추정값의 신뢰대 그리기
p.x = data.frame(temp=c(1, 17))
# 자료 파일 읽기(window)
gym = read.table("c:/data/reg/forbes.txt", header=T)
# 자료 파일 읽기(window)
install.packages("xlsx")
library(xlsx)
gym = read.xlsx("c:/data/reg/forbes.txt", header=T)
gym = read.xlsx("c:/data/reg/p162.csv", header=T)
gym = read.xlsx("c:/data/reg/p162.csv", 1)
gym = read.xlsx("c:/data/reg/2_data.csv", 1)
gym = read.csv("c:/data/reg/2_data.csv", header=T)
head(gym)
gym = read.csv("c:/data/reg/p162.csv", header=T)
head(gym)
# 기술통계량 및 상관계수 보기
summary(gym[,-1]) # 번호라서 첫번째 열 빼준다
cor(gym[,-1])
# 산점도 그리기
par(mfrow=c(2,2), pty="s")
plot(gym$X1, gym$Y, pch=19)
plot(gym$X2, gym$Y, pch=19)
plot(gym$X3, gym$Y, pch=19)
plot(gym$X4, gym$Y, pch=19)
plot(gym$X1, gym$Y, xlab="weight", pch=19)
plot(gym$X2, gym$Y, xlab="pulse",pch=19)
plot(gym$X3, gym$Y, xlab="muscle power",pch=19)
plot(gym$X4, gym$Y, xlab="speed",pch=19)
# 회귀모형 적합하기
gym.lm = lm(Y ~ X1+X2+X3+X4, data=gym)
summary(gym.lm)
library(car)
avPlots(gym.lm)
# 분산분석표
anova(gym.lm)
# 잔차산점도 그리기
par(mfrow=c(2,2), pty="s")
plot(gym$X1, gym.lm$residuals, xlab="weight", pch=19)
abline(h=0, lty=2)
identify(gym$X1, gym.lm$residuals)
plot(gym$X1, gym.lm$residuals, xlab="weight", pch=19)
abline(h=0, lty=2)
plot(gym$X2, gym.lm$residuals, xlab="pulse",pch=19)
abline(h=0, lty=2)
plot(gym$X3, gym.lm$residuals, xlab="muscle power",pch=19)
abline(h=0, lty=2)
plot(gym$X4, gym.lm$residuals, xlab="speed",pch=19)
abline(h=0, lty=2)
plot(gym$X1, gym.lm$residuals, xlab="weight", pch=19)
plot(gym$X1, gym.lm$residuals, xlab="weight", pch=19)
plot(gym$X1, gym.lm$residuals, xlab="weight", pch=19)
plot(gym$X1, gym.lm$residuals, xlab="weight", pch=19)
abline(h=0, lty=2)
plot(gym$X2, gym.lm$residuals, xlab="pulse",pch=19)
abline(h=0, lty=2)
plot(gym$X3, gym.lm$residuals, xlab="muscle power",pch=19)
abline(h=0, lty=2)
plot(gym$X4, gym.lm$residuals, xlab="speed",pch=19)
abline(h=0, lty=2)
plot(gym.lm$fitted.values, gym.lm$residuals, xlab="weight", pch=19)
# 잔차산점도 그리기(추정값, 잔차)
par(mfrow=c(1,1), pty="s")
plot(gym.lm$fitted.values, gym.lm$residuals, xlab="weight", pch=19)
plot(gym.lm$fitted.values, gym.lm$residuals, pch=19)
abline(h=0, lty=2)

colnames(xm1) <- c('col1', 'col2', 'col3')
rownames(xm1) <-c('r1', 'r2', 'r3')
xm1
xm[1,]
xm[,1]
xm[,2:3]
xm[, c(1,3)]
x <- seq(1,10, by=2)
y<-letters[1:length(x)]
df<-data.frame(id=x, name=y)
df
df[1,]
df[,2]
df$id
df&names
df&name
df$name
/clearPushBack()
clear()
x1 <- c('kim', 'lee','park')
x2 <- c(170, 160, 180)
x3 <- c(60,55,75)
rowname <- (name, height, weight)
rowname <- ('name', 'height', 'weight')
rowname <- c('name', 'height', 'weight')
df <- data.frame(name = x1, height=x2, weight=x3)
df
> x1 <- c('kim', 'lee','park')
> x2 <- c(170, 160, 180)
> x3 <- c(60,55,75)
x1 <- c('kim', 'lee','park')
x2 <- c(170, 160, 180)
x3 <- c(60,55,75)
df <- data.frame(name = x1, height=x2, weight=x3)
df
df[, 2:3]
mx1 <- matrix(1:6, ncol=3, byrow=T)
mx1
mx2 <- cbind(rep(1,3), rep(2,3))
mx2
mx3 <- rbind(rep(1,3), rep(2,3))
mx3
if.test <-function(x){}
if.test <-function(x){
if(x%%2 == 0){
cat("x는 짝수입니다\n")
}else if(x%%2 == 1){}
else{ cat("x는 자연수가 아닙니다\n")}
}
iftest(100)
if.test(100)
if.test(101)
if.test(10.9)
sum1 <- 0
for(x in 1:10){
sum1 <- sum1 + x^2
}
print(sum1)
## while 반복문
x<-1
sum <-0
while(x<=10){
sum <- sum + x^2
x <- x+1
}
print(sum)
##반복문 중간에 나오기
x<-1:5
for (j in x){}
for (j in x){
if(j==3) next
cat(j, "\n")
}
x<-1:5
for (j in x){
if(j==3) break
cat(j, "\n")
}
#함수
my_sums <-function(a=0, b=10){
data<-a:b
sum1 <-0; sum2<-0
for (i in data){
sum1 = sum1 + i
sum2 = sum2 + i^2
}
list(sum1=sum1, sum2=sum2, n=length(data))
}
my_sums(0,10)
my_sums()
my_sums(0,100)
a$sum1
a = my_sums()
a$sum1
a$sum2
a = my_sums(a=1, b=20)
a
# 표본공간, 사건의 지정
S = rolldie(1, makespace=TRUE)
install.packages("tidyverse")
mtcars %>% head %>% .[,1:3]
#변수 값 바꾸기 및 결측치 처리
load("c:/data/pyandr/lect9/wd.Rdata")
mwd = wd
nwd[nwd$x2 < 0.11, "x2"]=99
nwd = wd
nwd[nwd$x2 < 0.11, "x2"]=99
nwd[nwd ==99]=NA
nwd
nwd[nwd>0.9]=99
nwd[nwd==00]=NA
nwd
head(nwd, n=5)
rowSums(is.na(nwd))
colSums(is.na(nwd))
mywd=na.omit(nwd)
head(mywd)
# 변수 이름 바꾸기
names(nwd)[6]="ny"
colnames(nwd)=c("a1", "a2","a3", "a4","a5", "newy")
nwd
#값 라벨: 숫자로 입력된 값을 라벨로 바꾸기
insurance = read.table("c/data/insurance.txt", header=T)
insurance = read.table("c/data/pyandr/insurance.txt", header=T)
insurance = read.table("c:/data/pyandr/insurance.txt", header=T)
insurance
insurance$job
#명목형(nominal data):factor()함수
insurance$job = factor(insurance$job, levels=c(1:3), labels=c("근로자", "사무직", "전문가"))
#순서형(ordered data)
#ordered()함수
insurance$edu2 = ordered(insurance$edu, levels=c(1:5), labels=c("무학", "국졸", "중졸", "고졸", "대졸"))
head(insurance)
#막대그림 그리기
job.freq = table(insurance$job)
barplot(job.freq)
title("막대그림:job")
#변수값 변환
install.packages("xlsx")
library(xlsx)
drug = read.xlsx("c:/Rfolder/data/drug.xlsx", 1)
drug = read.xlsx("c:/data/pyandr/drug.xlsx", 1)
drug
#Replace data in the field: Method1
drug$agr = drug$age
drug$agr[drug$agr>=20 & drug$agr <= 40]=1
drug$agr[drug$agr> 40 & drug$agr <= 60]=2
drug$agr[drug$agr> 60 ]=3
drug[c(1, 20, 40, 95),]
#Use recode function in car package: Method 2
install.packages("car")
library(car)
drug$agr2 = drug$age
drug$agr2 = recode(drug$age, "lo:40=1; 40:60=2; 60:hi=3")
drug[c(1, 20, 40, 80),]
drug$agr2 = ordered(drug$agr2, levels=c(1:3), labels=c("Lo~40", "40~60", "60~Hi" ))
agr2.freq = table(drug$agr2)
agr2.freq
barplot(agr2.freq, main="막대그림")
#케이스 선택
insurance = read.table("c:/Rfolder/data/insurance.txt", header=T)
insurance = read.table("c:/data/pyandr/insurance.txt", header=T)
select1=insurance[insurance$sex=='m',]
head(select1, n=3)
select2 = insurance[which(insurance$sex=='f' & insurance$job==2),]
head(select2, n=3)
select3 = insurance[insurance$job==3 & insurance$salary >= 140,]
head(select3, n=3)
library(dplyr)
dim(insurance)
tbl_df(insurance)
library(nycflights13)
install.packages(dplyr)
install.packages(nycflights13)
install.packages("nycflights13")
install.packages("dplyr")
install.packages("dplyr")
library(nycflights13)
dim(flights)
tbl_df(flights)
sel_3 = select(insurance, sex, job, amount, salary)
head(sel_3, 3)
sel_4 = filter(select(insurance, sex, job, amount, salary), job==1)
head(sel_4, 3)
sel_5 = select(insurance, job:salary) ##연속인 변수 표시 방법 job부터 salary 까지
head(sel_5, 3)
insu_add = mutate(insurance, amopersal = amount/salary)
head(insu_add)
amopersal = insurance$amount / insurance$salary
> insu_add2 = cbind(insurance, amopersal)
>
amopersal = insurance$amount / insurance$salary
amopersal = insurance$amount / insurance$salary
insu_add2 = cbind(insurance, amopersal)
insu_add2
sel_3_arr = arrange(sel_3, sex, job)
head(sel_3_arr,3)
ins_job = arrange(insurance, job)#job에 대해서 sorting
ins_job_g = group_by(ins_job, job)#job에 대해서 group by
ins_job_gm = summarize(ins_job_g, amMean=mean(amount), aSal=mean(salary))
ins_job_gm
nb2 = insurance %>%
select(amount, salary) %>%
filter(salary > 130 )
nb2
install.packages("dplyr", lib="C:/data/pyandr")
install.packages("dplyr", lib = "C:/data/pyandr")
library(dplyr, lib.loc="c:/data/pyandr")
head(mtcars,3)
mtcars %>% filter(am == 0) %>%
group_by(carb) %>%
summarize(mean(mpg))
summarise() ungrouping output (override with .groups
argument)
mtcars %>% filter(am == 0) %>%
group_by(carb) %>%
summarize(mean(mpg))
mtcars %>% filter(gear != 5) %>% group_by(gear) %>%
summarize ( Avg_mpg = mean(mpg),
Median_hp = as.numeric(median(hp)),
Count = n()) %>% arrange(desc(Count))
> library(dplyr)
> library(hflights)
> # hflights is flights from two Houston airports in 2011
> data(hflights)
> head(hflights)
library(dplyr)
library(hflights)
install.packages("hflights")
library(hflights)
data(hflights)
head(hflihgts)
head(hflights)
flgihts = tbl_df(hflights)
flgihts
filter(flights, Month==1, DayofMonth==1)
flights=flgihts
filter(flights, Month==1, DayofMonth==1)
filter(flights, UniqueCarrier=="AA" | UniqueCarrier=="UA")
select(flights, DepTime, ArrTime, FlightNum)
select(flights, Year:DayofMonth, contains("Taxi"), contains("Delay"))
na2 = flights %>%
select(UniqueCarrier, DepDelay) %>%
filter(DepDelay > 60)
na2
> flights %>%
select(UniqueCarrier, DepDelay) %>%
arrange(DepDelay)
flights %>%
select(UniqueCarrier, DepDelay) %>%
arrange(desc(DepDelay))
flights %>%
select(UniqueCarrier, DepDelay) %>%
arrange(DepDelay)
> flights %>%
select(Distance, AirTime) %>%
mutate(Speed = Distance/AirTime*60)
flights %>%
select(Distance, AirTime) %>%
mutate(Speed = Distance/AirTime*60)
flights %>%
group_by(Dest) %>%
summarise(avg_delay = mean(ArrDelay, na.rm=TRUE))
flights %>%
group_by(UniqueCarrier) %>%
summarise_each(funs(mean), Cancelled, Diverted)
data <- 1:10
data
market = read.table("c:/data/reg/market-1.txt", header=T)
head(market)
plot(market$X, market$Y, xlab="광고료", ylab="총판매액", pch=19)
title("광고료와 판매액의 산점도")
market.lm = lm(Y~X, data=market)
summary(market)
plot(market$X, market$Y, xlab="광고료", ylab="총판매액", pch=19)
abline(market.lm)
identify(market$X, market$Y)
names(market.lm)
resid=market.lm$residuals
fitted=market.lm$fitted
sum(resid)
sum(fitted)
sum(market$X*resid)
sum(fitted*resid)
#점 x bar , y bar는 적합된 회귀선상에 있음
xbar = mean(market$X)
ybar = mean(market$Y)
xbar
ybar
points(xbar, ybar, pch=17, cex=2.0, col="RED")
text(xbar, ybar, "(8.85, 19.36)")
fx<- "Y-hat = 0.328+2.14*X"
text(locator(1), fx)
#locator(1): 임의의 마우스 위치에
anova(market.lm)
### 2-6
score<-c(93, 83, 91, 68, 75, 87, 89, 96, 97, 67, 83, 81, 87, 80, 64,
83, 88, 76, 91, 78, 72, 80, 69, 80, 84, 71, 91, 81, 88, 73)
hist(score)
hist(score, main="")
### 2-7
rv<-c(0.8, 0.8, 0.8,  0.9, 0.9, 0.9, 0.9, 0.9, 1, 1, 1.8, 2, 2.1, 2.3, 2.4, 2.8,
2.9, 3, 3.2, 3.3, 3.5, 3.8, 3.8, 3.9, 4, 4.2, 4.4, 4.5, 5.1, 5.3, 5.3, 5.4,
14, 17, 18, 19, 21, 21, 23, 25, 27, 28, 32, 34, 36, 41, 42, 44, 48, 49,
51, 54, 59, 60, 61, 62, 80, 240)
hist(rv)
hist(rv, main="", xlab="CRP")
hist(rv, main="", xlab="CRP", breaks = 20)
hist(rv, main="", xlab="CRP", breaks = seq(0, 240, 20))
rn<-c(rnorm(100,5,2), rnorm(100,10,2))
set.seed(2021)
rn<-c(rnorm(100,5,2), rnorm(100,10,2))
hist(rn)
hist(rn, breaks=20, main="", xlab="value")
hist(rn, breaks=5, main="", xlab="value")
# 2-15
age<-c(57, 61, 47, 57, 48, 58, 57, 61, 54, 50, 68, 51)
boxplot(age)
boxplot(age, ylab="Age")
#2-16
member<-c(92, 107, 180, 90, 78, 91, 102, 88, 106, 125, 95, 102, 162)
boxplot(member)
boxplot(member, ylab="Number of board member")
member<-c(92, 107, 180, 90, 78, 91, 102, 88, 106, 125, 95, 102, 162)
mean(member)
var(member)
sd(member)
median(member)
fivenum(member)
IQR(member)
range(member)
###1. 분산분석표에 의한 F-검정
#window
market2 = read.table('C:\data\reg/market-2.txt', header=T)
head(market2, 2)
###1. 분산분석표에 의한 F-검정
#window
market2 = read.table('C:/data/reg/market-2.txt', header=T)
head(market2, 2)
market2.lm = lm(Y~X1+X2, data=market2)
summary(market2.lm)
names(market2.lm)
yhat=market2.lm$fited
cor(market2$Y, yhat)
yhat=market2.lm$fitted
cor(market2$Y, yhat)
cor(market2$Y, yhat)^2
#수정결정계수Adjusted R-squared
#잔차평균제곱근Residual standard error
sqrt(10.42/12)
print(Hello MuiltivariateDataAnalysis!)
survey = read.csv("c:/data/mva/survey.csvc")
survey = read.csv("c:/data/mva/survey.csv")
head(survey,3)
mean(survey$age)
sd(survey$age)
nlevels(survry$sex)
nlevels(survey$sex)
survey$sex = factor(survey$sex, levels=c(1:2), labels=c("Male", "Female"))
nlevels(survey$sex)
summary(survey[,-1])
###그룹별 기술통계량 구하기
tapply(survey$age, survey$sex, mean)
with(survey, tapply(age, sex, sd))
###두개의 변수 연결
sex_ma = list(survey$sex, survey$marriage)
table(sex_ma)
with(survey, tapply(age, sex_ma, mean))
with(survey, tapply(age, sex_ma, sd))
####################################################
### 주성분 분석(principal component analysis)
####################################################
# 1. 자료 가져오기
data("USArrests")
head(USArrests)
summary(USArrests)
boxplot(USArrsts)
boxplot(USArrests)
write.csv(USArrests, file='C:/data/mva/USArrests.csv')
# 2. 주성분 분석 실행
usarr_pca = princomp(USArrests, cor=T, scores=T)
names(usarr_pca)
usarr_pca
# 3. 주성분 분석 결과
summary(usarr_pca)
eig_val = usarr_pca$sdev^2
round(eig_val, 3)
# 5. 스크리그림과 누적분산
# 스크리그림
screeplot(usarr_pca, type="lines", pch=19, main="Scree plot")
# 누적분산 그림 그리기
usarr_var = usarr_pca$sdev^2
usarr_var_ratio = usarr_var/sum(usarr_var)
round(usarr_var_ratio, 3)
plot(cumsum(usarr_var_ratio), type='b', pch=19, xlab='Component',
ylab='Cumulative Proporton')
title('Variance Explained')
plot(cumsum(usarr_var_ratio), type='a', pch=19, xlab='Component',
ylab='Cumulative Proporton')
plot(cumsum(usarr_var_ratio), type='b', pch=19, xlab='Component',
ylab='Cumulative Proporton')
plot(cumsum(usarr_var_ratio), type='i', pch=19, xlab='Component',
ylab='Cumulative Proporton')
plot(cumsum(usarr_var_ratio), type='b', pch=19, xlab='Component',
ylab='Cumulative Proporton')
# 6. 주성분 계수
round(usarr_pca$loadings[,c(1:2)], 3)
# 7. 주성분 점수 및 행렬도(biplot)
usarr_pca$scores[, c(1:2)]
biplot(usarr_pca, cex=0.7, col=c("Red", "Blue"))
title("Biplot")
# 7. 주성분 점수 및 행렬도(biplot)
usarr_pca$scores[c(1:7), c(1:2)]
biplot(usarr_pca, cex=0.7, col=c("Red", "Blue"))
title("Biplot")
####################################################
### 주성분 분석(principal component analysis)
####################################################
# 1. 자료 가져오기
data("USArrests")
head(USArrests)
summary(USArrests)
boxplot(USArrests)
# 2. 주성분 분석 실행
# Principal component analysis using prcomp (using SVD)
usarr_pca =  prcomp(USArrests, scale=TRUE)
names(usarr_pca)
usarr_pca
# 3. 주성분 분석 결과
summary(usarr_pca)
eig_val = usarr_pca$sdev^2
eig_val = usarr_pca$sdev^2
round(eig_val, 3)
# 5. 스크리그림과 누적분산
# 스크리그림
screeplot(usarr_pca, type="lines", pch=19, main="Scree plot")
# 누적분산 그림 그리기
usarr_var = usarr_pca$sdev^2
usarr_var_ratio = usarr_var/sum(usarr_var)
round(usarr_var_ratio, 3)
plot(cumsum(usarr_var_ratio), type='b', pch=19, xlab='Component',
ylab='Cumulative Proporton')
title('Variance Explained')
# 6. 주성분 계수
round(usarr_pca$rotation[, c(1:2)], 3)
anscombe
obj1<-lm(y1~x1, data=anscombe)
round(obj$coefficients,1)
round(obj1$coefficients,1)
setwd("C:\\chj\\Rstudy\\dataviz")
install.packages(datarium)
install.packages("datarium")
library(datarium)
dat <- marketing
view(dat)
View(dat)
plot(dat$facebook, dat$sales)
lm(sales~facebook, data=dat)
lmobj <- lm(sales~facebook, data=dat)
abline(lmobj)
plot(dat$facebook, dat$sales, main="202135-368401", xlab="facebook", ylab="sales")
abline(lmobj)
plot(dat$facebook, dat$sales, main="202135-368401", xlab="facebook", ylab="sales", pch=19)
abline(lmobj col=3)
plot(dat$facebook, dat$sales, main="202135-368401", xlab="facebook", ylab="sales", pch=20)
abline(lmobj, col="blue")
abline(lmobj, col=3)
abline(lmobj, col=2)
abline(lmobj, col=1)
abline(lmobj, col=4)
abline(lmobj, col=5)
install.packages("ggplot2")
library(ggplot2)
#외부 데이터 불러들일때 가장 안정적인 함수
dat <- read.csv("owid-covid-data.csv")
View(dat)
dat1 <- dat %>% filter(iso_code=="KOR" |
iso_code=="USA" |
iso_code=="FRA" |
iso_code=="JPN")
table(dat1$iso_code)
library(dplyr) # 데이터 클리닝할 때 아주 유용한 패키지
dat1 <- dat %>% filter(iso_code=="KOR" |
iso_code=="USA" |
iso_code=="FRA" |
iso_code=="JPN")
table(dat1$iso_code)
dat1 <- dat %>% filter(iso_code=="KOR" |
iso_code=="USA" |
iso_code=="FRA" |
iso_code=="JPN") %>%
mutate(date=as.Date(date))
ggplot(data=dat1, mapping = aes(x=date, y=new_cases, color=iso_code)) + geom_line()
+ geom_line() + geom_smooth()
ggplot(data=dat1, mapping = aes(x=date, y=new_cases, color=iso_code)) +
geom_line() + geom_smooth(span=0.3) +
facet_wrap(~iso_code)
ggplot(data=dat1, mapping = aes(x=date, y=new_cases, color=iso_code)) +
geom_line() + geom_smooth(span=0.3)
dat <- marketing
ggplot(data=dat, mapping = aes(x=facebook, y=sales)) + geom_point()
lmobj <- lm(sales~facebook, data=dat)
ggplot(data=dat, mapping = aes(x=facebook, y=sales)) + geom_point() +
geom_abline(lmobj)
ggplot(data=dat, mapping = aes(x=facebook, y=sales)) + geom_point() +
geom_abline()
ggplot(data=dat, mapping = aes(x=facebook, y=sales)) + geom_point() +
stat_smooth(method =lm)
ggplot(data=dat, mapping = aes(x=facebook, y=sales)) + geom_point() +
geom_smooth(method =lm)
ggplot(data=dat, mapping = aes(x=facebook, y=sales)) + geom_point() +
stat_smooth(method =lm)
